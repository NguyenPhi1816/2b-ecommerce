// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using _2b_ecommerce.Infrastructure.Persistence;

#nullable disable

namespace _2b_ecommerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "discount_mode", new[] { "percent", "amount" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "gender_type", new[] { "male", "female" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "inventory_type", new[] { "in", "out", "transfer_in", "transfer_out", "adjust" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "order_status", new[] { "pending", "confirmed", "shipped", "delivered", "cancelled", "returned" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "payment_method", new[] { "cod", "ewallet" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "payment_status", new[] { "pending", "paid", "failed", "refunded" });
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgcrypto");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Batches", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly?>("ExpDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("MfgDate")
                        .HasColumnType("date");

                    b.Property<int>("OnHand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<decimal?>("SellPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid>("SkuId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("Batches_pkey");

                    b.HasIndex(new[] { "SkuId", "BatchCode" }, "uq_batches_sku_batch")
                        .IsUnique();

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.CartItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("SkuId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id")
                        .HasName("CartItems_pkey");

                    b.HasIndex("SkuId");

                    b.HasIndex(new[] { "CartId", "SkuId" }, "uq_cart_item")
                        .IsUnique();

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Carts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("Carts_pkey");

                    b.HasIndex(new[] { "UserId" }, "Carts_UserId_key")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Categories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Categories_pkey");

                    b.HasIndex("ParentId");

                    b.HasIndex(new[] { "Slug" }, "Categories_Slug_key")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.DeliveryInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Line")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Ward")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("DeliveryInfo_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("DeliveryInfo");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Discounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("CustomerTier")
                        .HasColumnType("text");

                    b.Property<string>("CustomerType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndsAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("MaxDiscount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("Mode")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartsAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id")
                        .HasName("Discounts_pkey");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.InventoryMovements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("MovedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 3)
                        .HasColumnType("numeric(18,3)");

                    b.Property<Guid?>("RelatedOrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RelatedPurchaseId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("InventoryMovements_pkey");

                    b.HasIndex("BatchId");

                    b.HasIndex("UnitId");

                    b.ToTable("InventoryMovements");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.OptionValues", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OptionId")
                        .HasColumnType("uuid");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("Id")
                        .HasName("OptionValues_pkey");

                    b.HasIndex("OptionId");

                    b.ToTable("OptionValues");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Options", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid>("SpuId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("Options_pkey");

                    b.HasIndex("SpuId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.OrderItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("LineTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("SkuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id")
                        .HasName("OrderItems_pkey");

                    b.HasIndex("DiscountId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SkuId");

                    b.HasIndex("UnitId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Orders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DeliveryInfoId")
                        .HasColumnType("uuid");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<decimal>("ProductDiscount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("ShippingFee")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("VoucherDiscount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id")
                        .HasName("Orders_pkey");

                    b.HasIndex("DeliveryInfoId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Code" }, "Orders_Code_key")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Payments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("Method")
                        .HasColumnType("integer");

                    b.Property<string>("OrderCodeSnapshot")
                        .HasColumnType("text");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Provider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderTxnId")
                        .HasColumnType("text");

                    b.Property<string>("RawPayload")
                        .HasColumnType("jsonb");

                    b.Property<string>("RefundRef")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TransactionRef")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id")
                        .HasName("Payments_pkey");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Permissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("Resource")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Permissions_pkey");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.PurchaseItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("ImportPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid>("PurchaseId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("UnitConversionFactor")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("numeric(18,3)")
                        .HasDefaultValueSql("1");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("PurchaseItems_pkey");

                    b.HasIndex("BatchId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("UnitId");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Purchases", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("PoNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("PurchasedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("RefCode")
                        .HasColumnType("text");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("Purchases_pkey");

                    b.HasIndex("SupplierId");

                    b.HasIndex(new[] { "PoNumber" }, "Purchases_PoNumber_key")
                        .IsUnique();

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.RankUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("AchievedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("ExpiredAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("LastOrderAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<Guid>("RankId")
                        .HasColumnType("uuid");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalSpent")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("RankUsers_pkey");

                    b.HasIndex("RankId");

                    b.HasIndex(new[] { "UserId", "RankId" }, "uq_rank_users")
                        .IsUnique();

                    b.ToTable("RankUsers");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Ranks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("CalculationWindow")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("MaxOrderValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("MinOrderValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Ranks_pkey");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Reviews", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uuid");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Guid>("SkuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("Reviews_pkey");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("SkuId");

                    b.HasIndex(new[] { "UserId", "SkuId", "OrderItemId" }, "uq_review_purchase")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.RolePermissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("RolePermissions_pkey");

                    b.HasIndex("PermissionId");

                    b.HasIndex(new[] { "RoleId", "PermissionId" }, "uq_role_permission")
                        .IsUnique();

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Roles_pkey");

                    b.HasIndex(new[] { "Code" }, "Roles_Code_key")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Sku", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("BaseQtyPerSku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("SkuCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SpuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("Sku_pkey");

                    b.HasIndex("SpuId");

                    b.HasIndex("UnitId");

                    b.HasIndex(new[] { "SkuCode" }, "Sku_SkuCode_key")
                        .IsUnique();

                    b.ToTable("Sku");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.SkuDiscounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SkuId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("SkuDiscounts_pkey");

                    b.HasIndex("SkuId");

                    b.HasIndex(new[] { "DiscountId", "SkuId" }, "uq_discount_sku")
                        .IsUnique();

                    b.ToTable("SkuDiscounts");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.SkuOptionValues", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("SkuId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ValueId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("SkuOptionValues_pkey");

                    b.HasIndex("SkuId");

                    b.HasIndex(new[] { "ValueId", "SkuId" }, "uq_sku_option_value")
                        .IsUnique();

                    b.ToTable("SkuOptionValues");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Spu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpuCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id")
                        .HasName("Spu_pkey");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "SpuCode" }, "Spu_SpuCode_key")
                        .IsUnique();

                    b.ToTable("Spu");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.SpuImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Alt")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<Guid>("SpuId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("SpuImages_pkey");

                    b.HasIndex("SpuId");

                    b.ToTable("SpuImages");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Suppliers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Line")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("text");

                    b.Property<string>("Ward")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Suppliers_pkey");

                    b.HasIndex(new[] { "SupplierCode" }, "Suppliers_SupplierCode_key")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Units", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Units_pkey");

                    b.HasIndex(new[] { "Code" }, "Units_Code_key")
                        .IsUnique();

                    b.ToTable("Units");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("Users_pkey");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "Users_Email_key")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.VoucherRedemptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RedeemedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VoucherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("VoucherRedemptions_pkey");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "VoucherId", "OrderId" }, "uq_voucher_order")
                        .IsUnique();

                    b.ToTable("VoucherRedemptions");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Vouchers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndsAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("MaxDiscount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("MinOrderTotal")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Mode")
                        .HasColumnType("integer");

                    b.Property<int?>("PerCustomerLimit")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartsAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TotalLimit")
                        .HasColumnType("integer");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id")
                        .HasName("Vouchers_pkey");

                    b.HasIndex(new[] { "Code" }, "Vouchers_Code_key")
                        .IsUnique();

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Batches", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Sku", "Sku")
                        .WithMany("Batches")
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Batches_SkuId_fkey");

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.CartItems", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Carts", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("CartItems_CartId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Sku", "Sku")
                        .WithMany("CartItems")
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("CartItems_SkuId_fkey");

                    b.Navigation("Cart");

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Carts", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Users", "User")
                        .WithOne("Carts")
                        .HasForeignKey("_2b_ecommerce.Infrastructure.Models.Carts", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Carts_UserId_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Categories", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Categories", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Categories_ParentId_fkey");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.DeliveryInfo", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Users", "User")
                        .WithMany("DeliveryInfo")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("DeliveryInfo_UserId_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.InventoryMovements", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Batches", "Batch")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("InventoryMovements_BatchId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Units", "Unit")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("InventoryMovements_UnitId_fkey");

                    b.Navigation("Batch");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.OptionValues", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Options", "Option")
                        .WithMany("OptionValues")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("OptionValues_OptionId_fkey");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Options", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Spu", "Spu")
                        .WithMany("Options")
                        .HasForeignKey("SpuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Options_SpuId_fkey");

                    b.Navigation("Spu");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.OrderItems", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Discounts", "Discount")
                        .WithMany("OrderItems")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("OrderItems_DiscountId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Orders", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("OrderItems_OrderId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Sku", "Sku")
                        .WithMany("OrderItems")
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("OrderItems_SkuId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Units", "Unit")
                        .WithMany("OrderItems")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("OrderItems_UnitId_fkey");

                    b.Navigation("Discount");

                    b.Navigation("Order");

                    b.Navigation("Sku");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Orders", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.DeliveryInfo", "DeliveryInfo")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Orders_DeliveryInfoId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Orders_UserId_fkey");

                    b.Navigation("DeliveryInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Payments", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Orders", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Payments_OrderId_fkey");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.PurchaseItems", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Batches", "Batch")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("PurchaseItems_BatchId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Purchases", "Purchase")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("PurchaseItems_PurchaseId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Units", "Unit")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("PurchaseItems_UnitId_fkey");

                    b.Navigation("Batch");

                    b.Navigation("Purchase");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Purchases", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Suppliers", "Supplier")
                        .WithMany("Purchases")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Purchases_SupplierId_fkey");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.RankUsers", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Ranks", "Rank")
                        .WithMany("RankUsers")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("RankUsers_RankId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Users", "User")
                        .WithMany("RankUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("RankUsers_UserId_fkey");

                    b.Navigation("Rank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Reviews", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.OrderItems", "OrderItem")
                        .WithMany("Reviews")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Reviews_OrderItemId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Sku", "Sku")
                        .WithMany("Reviews")
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Reviews_SkuId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Users", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Reviews_UserId_fkey");

                    b.Navigation("OrderItem");

                    b.Navigation("Sku");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.RolePermissions", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Permissions", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("RolePermissions_PermissionId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Roles", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("RolePermissions_RoleId_fkey");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Sku", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Spu", "Spu")
                        .WithMany("Sku")
                        .HasForeignKey("SpuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Sku_SpuId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Units", "Unit")
                        .WithMany("Sku")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Sku_UnitId_fkey");

                    b.Navigation("Spu");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.SkuDiscounts", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Discounts", "Discount")
                        .WithMany("SkuDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SkuDiscounts_DiscountId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Sku", "Sku")
                        .WithMany("SkuDiscounts")
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SkuDiscounts_SkuId_fkey");

                    b.Navigation("Discount");

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.SkuOptionValues", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Sku", "Sku")
                        .WithMany("SkuOptionValues")
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SkuOptionValues_SkuId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.OptionValues", "Value")
                        .WithMany("SkuOptionValues")
                        .HasForeignKey("ValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SkuOptionValues_ValueId_fkey");

                    b.Navigation("Sku");

                    b.Navigation("Value");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Spu", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Categories", "Category")
                        .WithMany("Spu")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Spu_CategoryId_fkey");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.SpuImages", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Spu", "Spu")
                        .WithMany("SpuImages")
                        .HasForeignKey("SpuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("SpuImages_SpuId_fkey");

                    b.Navigation("Spu");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Users", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Users_RoleId_fkey");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.VoucherRedemptions", b =>
                {
                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Orders", "Order")
                        .WithMany("VoucherRedemptions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("VoucherRedemptions_OrderId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Users", "User")
                        .WithMany("VoucherRedemptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("VoucherRedemptions_UserId_fkey");

                    b.HasOne("_2b_ecommerce.Infrastructure.Models.Vouchers", "Voucher")
                        .WithMany("VoucherRedemptions")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("VoucherRedemptions_VoucherId_fkey");

                    b.Navigation("Order");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Batches", b =>
                {
                    b.Navigation("InventoryMovements");

                    b.Navigation("PurchaseItems");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Carts", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Categories", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("Spu");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.DeliveryInfo", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Discounts", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("SkuDiscounts");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.OptionValues", b =>
                {
                    b.Navigation("SkuOptionValues");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Options", b =>
                {
                    b.Navigation("OptionValues");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.OrderItems", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Orders", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Payments");

                    b.Navigation("VoucherRedemptions");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Permissions", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Purchases", b =>
                {
                    b.Navigation("PurchaseItems");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Ranks", b =>
                {
                    b.Navigation("RankUsers");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Roles", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Sku", b =>
                {
                    b.Navigation("Batches");

                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");

                    b.Navigation("SkuDiscounts");

                    b.Navigation("SkuOptionValues");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Spu", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("Sku");

                    b.Navigation("SpuImages");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Suppliers", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Units", b =>
                {
                    b.Navigation("InventoryMovements");

                    b.Navigation("OrderItems");

                    b.Navigation("PurchaseItems");

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Users", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("DeliveryInfo");

                    b.Navigation("Orders");

                    b.Navigation("RankUsers");

                    b.Navigation("Reviews");

                    b.Navigation("VoucherRedemptions");
                });

            modelBuilder.Entity("_2b_ecommerce.Infrastructure.Models.Vouchers", b =>
                {
                    b.Navigation("VoucherRedemptions");
                });
#pragma warning restore 612, 618
        }
    }
}
